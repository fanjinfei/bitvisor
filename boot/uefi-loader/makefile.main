ARCH            = $(shell uname -m | sed s,i[3456789]86,ia32,)
#LIB_PATH        = /usr/lib64
LIB_PATH        = /usr/lib
EFI_INCLUDE     = /usr/include/efi
EFI_INCLUDES    = -nostdinc -I$(EFI_INCLUDE) -I$(EFI_INCLUDE)/$(ARCH) -I$(EFI_INCLUDE)/protocol \
		  -I/usr/include

EFI_PATH        = /usr/lib64/gnuefi
#EFI_CRT_OBJS    = $(EFI_PATH)/crt0-efi-$(ARCH).o
#EFI_LDS         = $(EFI_PATH)/elf_$(ARCH)_efi.lds
EFI_LDS         = $(LIB_PATH)/elf_$(ARCH)_efi.lds
EFI_CRT_OBJS    = $(LIB_PATH)/crt0-efi-$(ARCH).o

CFLAGS          = -c -fno-stack-protector -fpic -fshort-wchar -mno-red-zone $(EFI_INCLUDES)
ifeq ($(ARCH),x86_64)
        CFLAGS  += -DEFI_FUNCTION_WRAPPER
endif

LDFLAGS         = -nostdlib -znocombreloc -T $(EFI_LDS) -shared -Bsymbolic -L$(EFI_PATH) -L$(LIB_PATH) \
                  $(EFI_CRT_OBJS) -lefi -lgnuefi

TARGET  = main.efi
OBJS    = main.o
SOURCES = main.c

all: $(TARGET)

main.so: $(OBJS)
	$(LD) -o $@ $(LDFLAGS) $^ $(EFI_LIBS)

%.efi: %.so
	objcopy -j .text -j .sdata -j .data \
                -j .dynamic -j .dynsym  -j .rel \
                -j .rela -j .reloc  \
                --target=efi-app-$(ARCH) $^ $@
